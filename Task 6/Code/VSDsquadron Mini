#include <Wire.h>
#include <Keypad.h>
#include <SoftwareSerial.h>
#include <LiquidCrystal_PCF8574.h>

// Use correct GPIO numbers based on VSDSquadron Mini
#define RX_PIN 1  // GPIO for USART RX (Connect to ESP TX)
#define TX_PIN 2  // GPIO for USART TX (Connect to ESP RX)

SoftwareSerial ESPSerial(RX_PIN, TX_PIN); // VSD TX -> ESP RX, VSD RX -> ESP TX

// Keypad setup
const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {
    {'1', '2', '3', 'A'},
    {'4', '5', '6', 'B'},
    {'7', '8', '9', 'C'},
    {'*', '0', '#', 'D'}
};

// Define correct GPIO numbers for the keypad pins
byte rowPins[ROWS] = {3, 4, 5, 6};  // Replace with correct GPIO numbers
byte colPins[COLS] = {7, 8, 9, 10}; // Replace with correct GPIO numbers

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

// LCD Initialization (Change 0x27 to 0x3F if needed)
LiquidCrystal_PCF8574 lcd(0x27);

// Elevator Simulation
int currentFloor = 1;  // Start from Ground Floor

void setup() {
    Serial.begin(115200);   // Debugging
    ESPSerial.begin(9600);  // Communication with ESP

    // Initialize LCD
    lcd.begin(16, 2);
    lcd.setBacklight(255);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("VSD Ready");
    lcd.setCursor(0, 1);
    lcd.print("Enter Floor No");

    Serial.println("[INFO] VSD Ready - Enter Floor Number on Keypad");
}

void loop() {
    char key = keypad.getKey();

    if (key) {
        Serial.print("[KEYPAD] Pressed: ");
        Serial.println(key);

        if (key >= '0' && key <= '9') {  // Valid floor number input
            Serial.print("[INFO] Sending Floor: ");
            Serial.println(key);

            ESPSerial.print("F");  // Prefix for floor info
            ESPSerial.println(key);

            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Request Sent");
            lcd.setCursor(0, 1);
            lcd.print("Floor: " + String(key));
        }
    }

    // Check if data is received from ESP
    if (ESPSerial.available()) {
        String receivedData = ESPSerial.readStringUntil('\n');
        receivedData.trim();

        if (receivedData.startsWith("F")) {  // Floor data format: F<floor>
            int floor = receivedData.substring(1).toInt();

            Serial.print("[INFO] Going to Floor: ");
            Serial.println(floor);

            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Going to Floor:");
            lcd.setCursor(0, 1);
            lcd.print(String(floor));

            // Simulating movement with a 2-second delay per floor
            while (currentFloor != floor) {
                if (currentFloor < floor) {
                    currentFloor++;
                } else {
                    currentFloor--;
                }

                Serial.print("[INFO] Present Floor: ");
                Serial.println(currentFloor);

                lcd.clear();
                lcd.setCursor(0, 0);
                lcd.print("Present Floor:");
                lcd.setCursor(0, 1);
                lcd.print(String(currentFloor));

                delay(2000);  // 2-second delay per floor
            }

            Serial.println("[INFO] Arrived at Floor: " + String(currentFloor));

            lcd.clear();
            lcd.setCursor(0, 0);
            lcd.print("Arrived at");
            lcd.setCursor(0, 1);
            lcd.print("Floor: " + String(currentFloor));
        }
    }
}
